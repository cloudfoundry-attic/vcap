the plan:

- create a testing "harness" to bring up minimum number of components
  necessary for testing the HM

  - implement a ForkedComponent class for HealthManager

  - instantiate ForkedComponents for NATS and the newly created HM

  - ensure basic connectivity by receiving ping messages

  - ensure test instance of CloudController database is created and
    accessible

  - populate the test db with minimal data using App model; and

- emulate heartbeat signals to HM

- ensure that control messages that HM sends to CC are appropriate
  - close app unexpectedly and ensure restart message
  - send heartbeats from extra instances and ensure stop message



QUESTION:

would it make more sense to establish the true state by actually
bringing up a CC and DEA?  That way the DB would populate "truly",
there'd be no need to emulate it by writing directly into the tables

This would require:

bringing up the CC, the DEA, actually deploying a test app.


----- FROM PIVOTAL, original story:

Write a set of functional tests that exercise the public "interface"
and behavior exposed by the health manager.

Some examples of behaviors tested:
- Restarting apps upon receipt of droplet.exited messages w/ reason "CRASHED".

- Stopping extra instances of an application.
- Starting missing instances of an application.

We should be able to use this test suite against the new HM with minor
modification to help verify its correctness.
