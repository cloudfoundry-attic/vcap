#!/bin/bash

# Allow VCAP_REPO to be overriden for testing
VCAP_REPO=${VCAP_REPO:-https://github.com/cloudfoundry/vcap.git}

export rvm_trust_rvmrcs_flag=1 # Trust all rmvrcs we find

OS=`uname -s`
if [[ $OS == 'Linux' ]]; then
    PLATFORM='Linux'
elif [[ $OS == 'Darwin' ]]; then
    PLATFORM='MacOSX'
else
    echo "Unknown System, cancelling setup"
    exit 1
fi

echo ""
echo '-----------------------------------------------------------'
echo "($PLATFORM) One Click Installer for VMware's Cloud Application Platform!"
echo '-----------------------------------------------------------'
echo ""

echo "Hopefully this will be the last time you type your password"
sudo ls > /dev/null

read -p "Enter the password you want to use for root mysql user: " MYSQL_PASS

echo "Installing dependencies"
if [[ $PLATFORM == 'Linux' ]]; then
  sudo apt-get update
  sudo apt-get -y install coreutils autoconf curl git-core ruby bison build-essential zlib1g-dev libssl-dev libreadline5-dev
else
  echo "Sorry, we can't install dependencies for your system yet."
fi

# Generate random mysql password
if [[ $PLATFORM == 'Linux' ]]; then
  MYSQL_PASS="$(cat /dev/urandom | tr -dc _A-Z-a-z-0-9 | head -c10)"
elif [[ $PLATFORM == 'MacOSX' ]]; then
  MYSQL_PASS="$(md5 -qs "$(date)")"
fi

echo "Patch around .bash_profile issue with RMV"
if [ -f ~/.bashrc ]; then
  if [ ! -f ~/.bash_profile ]; then
    # rvm install is going to write into .bash_profile in this
    # case and short circuit loading of .bashrc so we need to
    # create a proper .bash_profile if its missing
    echo "# This file is sourced by bash for login shells.  The following line" >> ~/.bash_profile
    echo "# runs your .bashrc and is recommended by the bash info pages." >> ~/.bash_profile
    echo "[[ -f ~/.bashrc ]] && . ~/.bashrc" >> ~/.bash_profile
  fi
fi

echo "Installing rvm"
curl -s -k -B https://rvm.beginrescueend.com/install/rvm > /tmp/install_rvm
bash /tmp/install_rvm
rm /tmp/install_rvm

echo "Fixing init scripts to work with rvm"
init_file=""
if [ -f ~/.bashrc ]; then
  init_file="$HOME/.bashrc"
elif [ -f ~/.bash_profile ]; then
  init_file="$HOME/.bash_profile"
elif [ -f ~/.zshrc ]; then
  init_file="$HOME/.zshrc"
fi
if [ -f "$init_file" ]; then
  if grep '^ *\[ -z "$PS1" \] && return *$' $init_file; then
    sed -i.bkup -e 's/^ *\[ -z "$PS1" \] && return *$/if [ -n "$PS1" ]; then/' $init_file
    echo "fi" >> $init_file
  fi

  echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"' >> $init_file
fi

echo "Activate rvm"
rvm_path="$HOME/.rvm"
[[ -s "$rvm_path/scripts/rvm" ]] && source "$rvm_path/scripts/rvm"
type rvm | head -1

# remove rake from default and global gems and instead install manually
rm ~/.rvm/gemsets/default.gems
rm ~/.rvm/gemsets/global.gems

echo "Installing various rubies"
rvm install 1.9.2-p180
rvm --default 1.9.2-p180
rvm install 1.8.7

# install only rake 0.8.7
rvm use 1.8.7
gem install rake --version '0.8.7' --no-rdoc --no-ri

rvm use 1.9.2
gem install rake --version '0.8.7' --no-rdoc --no-ri

echo "Getting vcap"
[ -d ~/cloudfoundry ] || mkdir ~/cloudfoundry
cd ~/cloudfoundry

[ -d vcap ] || git clone $VCAP_REPO
cd vcap
git submodule update --init
gem install vmc --no-rdoc --no-ri

echo "Setting up vcap."
cd ~/cloudfoundry/vcap

sudo setup/vcap_setup -a -s -p "$MYSQL_PASS"

cd ~/cloudfoundry/vcap/services/mysql/config
sed -i.bkup -e "s/pass: root/pass: $MYSQL_PASS/" mysql_node.yml

echo "Restarting nginx"
cd ~/cloudfoundry/vcap
sudo cp setup/simple.nginx.conf /etc/nginx/nginx.conf
sudo /etc/init.d/nginx restart

echo "Installing bundler"
cd ~/cloudfoundry/vcap
gem install bundler --no-rdoc --no-ri
rake bundler:install

# don't start up vcap in this shell
# its best to exit the shell and then
# come back in so that the .rvmrc in cloudfoundry/vcap activates correctly

echo 'Success!'
