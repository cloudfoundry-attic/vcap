#development cloudcontroller  nginx.conf
worker_processes  1;

error_log /var/vcap/sys/log/cc_nginx/nginx.error.log;
pid       /var/vcap/sys/run/cc_nginx.pid;

events {
  worker_connections  8192;
  use epoll;
}

http {
  include       mime.types;
  default_type  text/html;
  server_tokens off;

  log_format main  '$host - [$time_local] '
                   '"$request" $status $bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   '$remote_addr response_time:$upstream_response_time';

  access_log  /var/vcap/sys/log/cc_nginx/nginx.access.log  main;

  sendfile             on;  #enable use of sendfile()
  tcp_nopush           on;
  tcp_nodelay          on;  #disable nagel's algorithm

  keepalive_timeout  75 20; #inherited from router

  client_max_body_size 256M; #already enforced upstream/but doesn't hurt.

  upstream cloud_controller {
    server  127.0.0.1:9025;
    #server unix:/tmp/cloud_controller.sock;
  }

  server {
    listen       9022;
    server_name  _;
    server_name_in_redirect off;

    #proxy and log all CC traffic
    location / {
      access_log /var/vcap/sys/log/cc_nginx/nginx.access.log  main;
      proxy_buffering             off;
      proxy_set_header            Host $host;
      proxy_set_header            X-Real_IP $remote_addr;
      proxy_set_header            X-Forwarded_For $proxy_add_x_forwarded_for;
      proxy_redirect              off;
      proxy_connect_timeout       10;
      proxy_send_timeout          30;
      proxy_read_timeout          30;
      proxy_pass                 http://cloud_controller;
    }

    #used for x-accel-redirect uri://location/foo.txt
    #nginx will serve the file root || location || foo.txt
    location /droplets/ {
      internal;
      root   /var/vcap/shared;
    }

    location ~ /apps/.*/application {
      # Pass altered request body to this location
      upload_pass   @cc_uploads;
      upload_pass_args on;

      # Store files to this directory
      upload_store /var/vcap/data/cloud_controller/tmp/uploads;

      # Allow uploaded files to be read only by user
      upload_store_access user:r;

      # Set specified fields in request body
      upload_set_form_field "${upload_field_name}_name" $upload_file_name;
      upload_set_form_field "${upload_field_name}_path" $upload_tmp_path;

      #forward the following fields from existing body
      upload_pass_form_field "^resources$";
      upload_pass_form_field "^_method$";

      #on any error, delete uploaded files.
      upload_cleanup 400-505;
    }

    # Pass altered request body to a backend
    location @cc_uploads {
      proxy_pass   http://localhost:9025;
      #proxy_pass http://unix:/tmp/cloud_controller.sock;
    }

    location ~ ^/internal_redirect/(.*){
      # only allow internal redirects
      internal;

      set $download_url $1;

      #have to manualy pass along auth header
      set $auth_header $upstream_http_x_auth;
      proxy_set_header Authorization $auth_header;

      # Download the file and send it to client
      proxy_pass $download_url;
    }
  }
}
