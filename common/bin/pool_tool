#!/usr/bin/env ruby
$:.unshift(File.join(File.dirname(__FILE__), '../lib/vcap/user_pools'))

ENV["BUNDLE_GEMFILE"] ||= File.join(File.dirname(__FILE__), '../Gemfile')
require 'bundler'
Bundler.setup

require 'optparse'
require 'user_pool_util'

module PoolTool
  USAGE = 'usage: pool_tool [OPTIONS], try -h for more options'

  class << self
    def require_root
      if Process.uid != 0
        puts "This operation requires root privileges."
        exit 1
      end
    end

    def install_pool(name, size)
      require_root
      if not VCAP::UserPoolUtil.pool_exists?(name)
        VCAP::UserPoolUtil.install_pool(name, size.to_i)
      else
        puts "Pool with name #{name} already exists, can't install."
        exit 1
      end
    end

    def remove_pool(name)
      require_root
      if VCAP::UserPoolUtil.pool_exists?(name)
        VCAP::UserPoolUtil.remove_pool(name)
      else
        puts "No pool with name #{name}, can't do remove."
        exit 1
      end
    end

    def list_pools
      list = VCAP::UserPoolUtil.pool_list
      if list.size > 0
        puts list
      else
        puts "No user pools found."
      end
    end

    def parse_options
      options = OptionParser.new do |opts|
          opts.banner = USAGE

          opts.on("-c", "--create NAME,SIZE", "Create pool NAME with SIZE users.") do |opt|
            name, size = opt.split(',')
            if size == nil
              puts "Invalid input to create, see ./pool_tool -h."
              exit 1
            end
            install_pool(name, size)
          end

          opts.on("-d", "--delete NAME", "Delete pool NAME.") do |opt|
            remove_pool(opt)
          end

          opts.on("-l", "--list", "List current pools.") do
            list_pools
          end

          opts.on("-h", "--help", "Help") do
            puts opts
            exit
          end
      end
      options.parse!(ARGV)
    end
  end

  logger = Logger.new(STDOUT)
  logger.level = Logger::INFO
  VCAP::UserPoolUtil.init(logger)
  if ARGV.length == 0
    puts USAGE
    exit
  end
  parse_options
end
