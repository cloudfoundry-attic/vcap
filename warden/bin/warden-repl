#!/usr/bin/env ruby
ENV['BUNDLE_GEMFILE'] ||= File.expand_path("../../Gemfile", __FILE__)
$LOAD_PATH.unshift(File.expand_path("../../lib", __FILE__))

require "bundler"
Bundler.setup

require "optparse"

require "warden/repl"

options = {}
OptionParser.new do |op|
  op.banner = <<-EOT
Usage: warden-repl [options]
Runs an interactive REPL by default.

EOT
  op.on("-c COMMAND", "Run COMMAND non-interactively") do |command|
    options[:command] = command
  end

  op.on("-x", "Writes each command preceded by a '+' to stdout before executing") do
    options[:trace] = true
  end

  op.on("-e",
        "Only applicable to -c. If a multi-command string is supplied, exit" \
        + " after the first unsuccessful command.") do
    options[:errexit] = true
  end
end.parse!

repl = Warden::Repl.new(options)

if options[:command]
  commands = options[:command].split("\n")
  exit_status = nil
  commands.each do |command|
    command_info = repl.process_line(command)

    exit_status =
      if !command_info
        0
      elsif command_info[:error]
        1
      elsif command_info[:name] == "run"
        Integer(command_info[:result][0] || 1)
      else
        0
      end

    if (exit_status != 0) && options[:errexit]
      break
    end
  end
  exit(exit_status)
else
  trap('INT') { exit }
  repl.run
end
